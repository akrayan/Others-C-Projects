/*
** malloc.c for malloc.c in /home/rayan/Memory/PSU_2016_malloc
**
** Made by Rayan
** Login   <raihane.akkache@epitech.net>
**
** Started on  Mon Jan 30 12:00:42 2017 Rayan
** Last update Sun Feb  5 12:03:53 2017 Axel
*/

#include "list.h"


void	*pblock;
t_list	*list = NULL;
t_list	*last = NULL;

/*
void	*malloc_metadata(void *pmetadata, void *pdata, void *pnblock, int pagesize, int s)
{
  if ((int)(((pmetadata - pblock) % pagesize) + sizeof(t_list)) < pagesize)
    {
      if (brk(pmetadata + sizeof(t_list)) ==  -1)
	return (NULL);
    }
  else
    {

      pnblock = pagesize - ((pmetadata - pblock) % pagesize) + pmetadata;
						    //(((pmetadata - pblock) / pagesize) + 1) + pblock;
      if (brk(pnblock) == -1)
	return (NULL);
      if (sbrk(sizeof(t_list) - (pnblock - pmetadata)) == (void *)-1)
	return (NULL);
      /*if ((pdata = sbrk(sizeof(t_list) - (pnblock - pmetadata))) == (void *)-1)
	return (NULL);
    }
  return ((void *)2);
}
*/

void	*malloc_metadata(void *pmetadata, void *pnblock, int pagesize, int s)
{
  if ((int)(((pmetadata - pblock) % pagesize) + sizeof(t_list) + s) < pagesize)
    {
      if (brk(pmetadata + sizeof(t_list) + s) ==  -1)
	return (NULL);
    }
  else
    {
      pnblock = pagesize - ((pmetadata - pblock) % pagesize) + pmetadata;					    //((((pmetadata - pblock) / pagesize) + 1) + pblock;
      if (brk(pnblock) == -1)
	return (NULL);
      if (sbrk(sizeof(t_list) + s - (pnblock - pmetadata)) == (void *)-1)
	return (NULL);
      /*if ((pdata = sbrk(sizeof(t_list) - (pnblock - pmetadata))) == (void *)-1)
	return (NULL);*/
    }
  return ((void *)2);
}

/*
void	*malloc_data(void *pdata, void *pnblock, int pagesize, int s)
{
  if ((int)(((pdata - pblock) % pagesize) + s) < pagesize)
    {
      if (brk(pdata + s) == -1)
	return (NULL);
    }
  else
    {
      pnblock = pagesize - ((pdata - pblock) % pagesize) + pdata;
      //pnblock = (((pdata - pblock) / pagesize) + 1) + pblock;
      if (brk(pnblock) == -1)
	return (NULL);
      if (sbrk(s - (pnblock - pdata)) == (void *)-1)
	return (NULL);
    }
  return ((void *)2);
  }*/

void	*malloc(size_t s)
{
  void	*pmetadata;
  void	*pdata;
  void	*pnblock;
  int	pagesize = getpagesize();

  if (list == NULL)
    {
      if ((pmetadata = sbrk(0)) == (void *)-1)
	return (NULL);
      pblock = pmetadata;
      if (sbrk(sizeof(t_list) + s) == (void *)-1)
	return (NULL);
      add_elem(s, pmetadata, pmetadata + sizeof(t_list));
    }
  else
    {
      pmetadata = last + last->size;

      if (malloc_metadata(pmetadata, pnblock, pagesize, s) == NULL)
	return (NULL);
      /*if (malloc_data(pmetadata + sizeof(t_list), pnblock, pagesize, s) == NULL)
	return (NULL);*/
      add_elem(s, pmetadata, pmetadata + sizeof(t_list));
    }
  return (pmetadata + sizeof(t_list));
}

void	free(void *p)
{
  t_list *tmp;
  
  if (p == NULL)
    return ;
  tmp = list;
  while (tmp != NULL && tmp->block != p)
    tmp = tmp->next;
  if (tmp == NULL)
    return ;
  brk(p + tmp->size + 1);
  p = NULL;
  p = memset(p,'\0', tmp->size);
  sbrk(- tmp->size - sizeof(struct s_list) -1);
  /* list = sup_elem_p(list, p); */
}

int	my_putchar(char c)
{
  write(1, &c, 1);
}

int	my_put_nbr(int nb)
{
  int	mod;

  if (nb < 0)
    {
      my_putchar('-');
      nb = nb * (-1);
    }
  if (nb >= 0)
    {
      if (nb >= 10)
	{
	  mod = (nb % 10);
	  nb = (nb - mod) / 10;
	  my_put_nbr(nb);
	  my_putchar(48 + mod);
	}
      else
	my_putchar(48 + nb % 10);
    }
}

char	*test2(char *s)
{
  int	i;
  char	*s2;

  i = -1;
  while (s[++i] != 0);
  if ((s2 = malloc2(i + 1)) == NULL)
    printf("wsh kes tu fou !?\n");
  i = -1;
  while (s[++i] != 0)
    s2[i] = s[i];
  s2[i] = 0;
  return (s2);
}

int	strlen(char *s)
{
  int	i = -1;

  while(s[++i]);
  return (i);
}

/* int main() */
/* { */
/*   char	*str; */
/*   char	*tab[100]; */
/*   int	k = 1; */
/*   int	i = 0; */

/*   while (i++ < 100) */
/*     { */
/*       tab[i] = malloc2(++k); */
/*       memset(tab[i], 'e', k - 1); */
/*       tab[i][k] = 0; */
/*     } */
/*   while (--i > 0) */
/*     { */
/*       write(1, tab[i], k--); */
/*       write(1, "\n", 1); */
/*     } */
/* } */

/* int main () */

/* { */
/*   int	i; */
/*   char	*s; */
  
/*   i = -1; */
/*   while (++i < 100) */
/*     { */
/*       s = test2("test1\n"); */
/*       write(1, s, strlen(s)); */
/*     } */
/*   write(1, "\n\n--------------------------------------\n\n", strlen("\n\n--------------------------------------\n\n")); */
/*   free2(s); */
/*   i = -1; */
/*   write(1, s, strlen(s)); */
/*     while (++i < 100) */
/*     { */
/*       s = test2("test2\n"); */
/*       write(1, s, strlen(s)); */
/*     } */
/*     write(1, "\n\n--------------------------------------\n\n", strlen("\n\n--------------------------------------\n\n")); */
/*     free2(s); */
/*     write(1, s, strlen(s)); */
/* } */

/* int	main() */
/* { */

 /* char  *str; */
  
  /* int   i; */
  
  /* i = 0; */
  /* if ((str = malloc2(400)) == NULL) */
  /*   return (1); */
  /* while (i < 400) */
  /*   { */
  /*     str[i] = 'a'; */
  /*     i += 1; */
  /*   } */
  /* my_put_nbr(sbrk(0) - (void*)str + sizeof(struct s_list)); */
  /* write(1, "\n\n", 2); */
  /* write(1, str, strlen(str)); */
  /* write(1, "\n\n", 2); */
  /* free2(str); */
  /* my_put_nbr(sbrk(0) - (void*)str + sizeof(struct s_list)); */
  /* /\* write(1, "\n\n", 2); *\/ */
  /* /\* write(1, str, strlen(str)); *\/ */
  /* return (0); */
  /* } */
